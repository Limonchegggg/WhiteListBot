package Main;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;
import org.bukkit.plugin.java.JavaPlugin;

import Admin.AdminCommands;
import Admin.BanData;
import Admin.Timer;
import Api.ConfigCreator;
import Database.MySql;
import Database.SQLDiscord;
import Database.SQLGetter;
import Database.SqlConnection;
import Events.JoinEvent;
import Events.TeleMessageMinecraft;
import Survival.SurvivalMain;
import WhiteListCommands.HatCommand;
import WhiteListCommands.WhiteListAdd;
import WhiteListCommands.WhiteListRemove;
import WhiteListCommands.connectBot;
import WhiteListCommands.vanish;
import bot.DiscordData;
import bot.WhiteListBot;
import configs.ConfigCommand;
import configs.Players;
import locale.LocaleData;

public class Main extends JavaPlugin{
	public boolean ServerWork = false;
	public MySql sql;
	public SQLGetter data;
	public WhiteListBot jda;
	public SQLDiscord sqld;
	public ConfigCreator cc;
	//–ò–≥—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞—Å—Ç—Ä—è–ª–∏
	public HashMap<String, Player> stack_players = new HashMap<String, Player>();
	//–ò–≥—Ä–æ–∫–∏ –≤ –≤–∞–Ω–∏—à–µ
	public ArrayList<String> vanish = new ArrayList<String>();
	//–ò–≥—Ä–æ–∫ - –≤—Ä–µ–º—è
	public HashMap<String, Integer> ban_list = new HashMap<String, Integer>();
	public HashMap<String, Integer> mute_list = new HashMap<String, Integer>();
	/**
	 * –ò–≥—Ä–æ–∫ - –ö–∞—Ç–µ–∫–æ–≥–∏—è - –£—Ä–æ–≤–µ–Ω—å –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	 */
	public HashMap<String, HashMap<String, HashMap<String, Integer>>> player_category = new HashMap<String, HashMap<String, HashMap<String, Integer>>>(); //–ò–≥—Ä–æ–∫_–ö–∞—Ç–µ–≥–æ—Ä–∏—è
	
	//–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ —Ä–µ–µ—Å—Ç —Å–µ—Ä–≤–µ—Ä–∞
	public HashMap<String, Integer> item_lvl = new HashMap<String, Integer>();
	
	/**
	 * –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤–µ—â–µ–π –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –±—É–¥–µ—Ç –ø–∞–¥–∞—Ç—å —ç–∫—Å–ø–∞
	 */
	public List<String> BlackListBlock = new ArrayList<String>();
	
	/**
	 * –°–ø–∏—Å–æ–∫ –ö–æ–º–∞–Ω–¥–∞ - –£—Ä–æ–≤–µ–Ω—å
	 */
	public HashMap<String, Integer> CommandLevelMap = new HashMap<String, Integer>();
	
	/*
	 * –†–µ–µ—Å—Ç—Ä –º–æ–¥–æ–≤
	 */
	public HashMap<String, ItemStack> mods = new HashMap<String, ItemStack>();
	
	@Override
	public void onEnable() {
		
		Players.setup();
		Players.get().addDefault("token", "Token Here");
		Players.get().addDefault("ChannelId", "Channel Id Here");
		Players.get().addDefault("ChannelCommand", "Channel Id Here");
		Players.get().addDefault("TeleMessage", "Channel Id Here");
		Players.get().addDefault("DiscordConsole", "Channel Id Here");
		Players.get().addDefault("Admins", "Id list here");
		Players.get().addDefault("ServerId", "Id Here");
		Players.get().addDefault("Kick_Message", "–í–∞—Å –Ω–µ—Ç –≤ –≤–∞–π—Ç–ª–∏—Å—Ç–µ");
		Players.get().addDefault("Tickets", true);
		Players.get().addDefault("SQLExeption", "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø–æ–ø—Ä–æ–±—É–µ–π—Ç–µ –µ—â–µ —Ä–∞–∑");
		Players.get().addDefault("host", "host");
		Players.get().addDefault("port", "port");
		Players.get().addDefault("database", "database");
		Players.get().addDefault("username", "username");
		Players.get().addDefault("password", "password");
		Players.get().addDefault("placeHolder", "Hello &player& how are you?");
		Players.get().options().copyDefaults(true);
		Players.save();
		
		DiscordData.setup();
		DiscordData.get().addDefault("Queue", null);
		DiscordData.get().addDefault("BlackWords", null);
		DiscordData.save();
		
		BanData.setup();
		BanData.get().addDefault("Bans", null);
		BanData.get().addDefault("Mute", null);
		BanData.save();
		
		//createLocale();
		
		
		this.jda = new WhiteListBot();
		this.sql = new MySql();
		this.data = new SQLGetter(this);
		this.sqld = new SQLDiscord(this);
		jda.startbot();
		
		getServer().getPluginCommand("connection").setExecutor(new SqlConnection());
		getServer().getPluginCommand("wladd").setExecutor(new WhiteListAdd());
		getServer().getPluginCommand("wlremove").setExecutor(new WhiteListRemove());
		getServer().getPluginCommand("v").setExecutor(new vanish());
		getServer().getPluginCommand("bot").setExecutor(new connectBot());
		getServer().getPluginCommand("adm").setExecutor(new AdminCommands());
		getServer().getPluginCommand("adm").setTabCompleter(new AdminCommands());
		getServer().getPluginCommand("reloadConfig").setExecutor(new ConfigCommand());
		getServer().getPluginCommand("hat").setExecutor(new HatCommand());
		getServer().getPluginManager().registerEvents(new JoinEvent(), this);
		getServer().getPluginManager().registerEvents(new TeleMessageMinecraft(), this);
		try {
			sql.connect();
		}
		catch (ClassNotFoundException e) {
			e.printStackTrace();
			Bukkit.getLogger().info("Database not connect (CLASS NOT FOUND)");
		}
		catch(SQLException e) {
			e.printStackTrace();
			Bukkit.getLogger().info("Database not connect (SQL ERROR)");
		}
			
		if(sql.isConnected()) {
			Bukkit.getLogger().info("Database is connected");
			sqld.CreateTable();
			data.createTable();
			
		}
		try {
		if(!BanData.get().getStringList("Names").isEmpty()) {
		new BanData().loadBans();
		}
		}catch(Exception e) {
			System.out.println("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–Ω–æ–≤");
		}
		try {
			if(!BanData.get().getStringList("NamesMute").isEmpty()) {
			new BanData().loadBans();
		}
		}catch(Exception e) {
			System.out.println("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º—É—Ç–æ–≤");
		}
		new Timer();
		new SurvivalMain(this);
		ServerWork = true;
		}
		@Override
		public void onDisable() {
			new BanData().saveBans();
			new BanData().saveMute();
			sql.disconnect();
			jda.stopBot();
			ServerWork = false;
		}
		
		@Override
		public void reloadConfig() {
			new BanData().saveBans();
			sql.disconnect();
			jda.stopBot();
		}
		public boolean existsSqlHostYml() {
			return Players.get().getString("host").isEmpty() ? false : true;
		}
		public String getSqlHost() {
			return Players.get().getString("host");
		}
		
		public boolean existsSqlPortYml() {
			return Players.get().getString("port").isEmpty() ? false : true;
		}
		public String SqlPortYml() {
			return Players.get().getString("port");
		}
		
		public boolean existsSqlDatabaseYml() {
			return Players.get().getString("database").isEmpty() ? false : true;
		}
		public String getSqlDatabaseYml() {
			return Players.get().getString("database");
		}
		
		public boolean existsSqlUsernameYml() {
			return Players.get().getString("username").isEmpty() ? false : true;
		}
		
		public boolean existsSqlPasswordYml() {
			return Players.get().getString("password").isEmpty() ? false : true;
		}
		
		
		@SuppressWarnings("unused")
		private void createLocale() {
			LocaleData.setup();
	    	//–û—á–µ—Ä–µ–¥—å
	    	HashMap<String, String> discord = new HashMap<String, String>();
	    	discord.put("DiscordQueueAdd", "–î–æ—Ä–æ–≥–æ–π %player%! –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –∏–≥—Ä–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!");
	    	discord.put("DiscordQueueAddQueue", "–î–æ—Ä–æ–≥–æ–π %player%! –Ø –¥–æ–±–∞–≤–∏–ª —Ç–µ–±—è –≤ –æ—á–µ—Ä–µ–¥—å –∏ –Ω–∞–ø–∏—à—É –∫–æ–≥–¥–∞ —Ç–µ–±—è –ø—Ä–∏–º—É—Ç!");
	    	discord.put("DiscordQueueContain", "–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –æ—á–µ—Ä–µ–¥–∏");
	    	discord.put("DiscordQueueCancel", "–î–æ—Ä–æ–≥–æ–π %player%! –ú–Ω–µ –∂–∞–ª—å, —Ç–µ–±–µ –æ—Ç–∫–∞–∑–∞–ª–∏, –Ω–æ –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑! üòø");
	    	discord.put("DiscordQueueAccept", "–î–æ—Ä–æ–≥–æ–π `` %duser% ``! –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –∏–≥—Ä–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ! üòé");
	    	discord.put("DiscordQueueCommandUsing", "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ gowl <–ù–∏–∫> \n–ü—Ä–∏–º–µ—Ä **gowl Shybka**");
	    	discord.put("DiscordQueueFail", "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å!");
	    	discord.put("DiscordQueueNickNameLenghtDeny", "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–Ω–∞ –Ω–∏–∫–∞ 4, –∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è 20");
	    	discord.put("DiscordQueueNickNameDeny", "–ù–∏–∫ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –±—É–∫–≤ –∏/–∏–ª–∏ —Ü–∏—Ñ—Ä");
	    	discord.put("DiscordQueueAccountDeny", "**–¢–∞–∫–æ–π –Ω–∏–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!**");
	    	LocaleData.get().addDefault("Discord", discord);
	    	//–î–∏—Å–∫–æ—Ä–¥ –ø–æ–º–æ—â—å –∑–∞—Å—Ç—Ä—è–≤—à–∏–º
	    	HashMap<String, String> discordHelp = new HashMap<String, String>();
	    	discordHelp.put("DiscordHelpDeny", "–Ø –Ω–µ –≤–∏–∂—É —á—Ç–æ —Ç—ã –∑–∞—Å—Ç—Ä—è–ª, –Ω–∏—á–µ–≥–æ –¥–µ–ª–∞—Ç—å –Ω–µ –±—É–¥—É");
	    	discordHelp.put("DiscordHelpPlayerOnServerFail", "–Ø –Ω–µ –≤–∏–∂—É —Ç–µ–±—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ");
	    	discordHelp.put("DiscordHelp", "–Ø —Å–¥–µ–ª–∞–ª –≤—Å–µ —á—Ç–æ —Å–º–æ–≥");
	    	LocaleData.get().set("DiscordHelp", discordHelp);
	    	
	    	//–î–∏—Å–∫–æ—Ä–¥ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
	    	HashMap<String, String> privateDiscordMessage = new HashMap<String, String>();
	    	privateDiscordMessage.put("DiscordTellBotDeny", "–ë–ª—è—Ç—å –Ω—É –ø—Ä–∏–≤–µ—Ç —è —Ç–æ–∂–µ –±–æ—Ç");
	    	privateDiscordMessage.put("DiscordTellCommandUsing", "–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏–≥—Ä—É, —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ [tell <–ù–∏–∫ –∏–≥—Ä–æ–∫–∞> <–°–æ–æ–±—â–µ–Ω–∏–µ>]");
	    	privateDiscordMessage.put("DiscordTellPlayerOnServerFail", "–Ø –Ω–µ –≤–∏–∂—É —ç—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ");
	    	privateDiscordMessage.put("DiscordTellPlayer", "[–õ–°][Discord]%player%: %message%");
	    	LocaleData.get().set("privateDiscordMessage", privateDiscordMessage);
	    	
	    	//–¢–µ–ª–µ–º–æ—Å—Ç
	    	HashMap<String, String> TeleChat = new HashMap<String, String>();
	    	TeleChat.put("DiscordChatToMinecraft", "[Discord]%duser%: %message%");
	    	LocaleData.get().addDefault("TeleChat", TeleChat);
	    	
	    	//–ö–æ–Ω—Ñ–∏–≥–∏
	    	HashMap<String, String> Config = new HashMap<String, String>();
	    	Config.put("ConfigReloaded", "–ö–æ–Ω—Ñ–∏–≥ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω");
	    	Config.put("ConfigReloadedFail", "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥–∞");
	    	LocaleData.get().addDefault("Config", Config);
	    	
	    	//–û—Ç–∫–∞–∑ –ø—Ä–∏ –∑–∞—Ö–æ–¥–µ
	    	HashMap<String, String> DenyJoin = new HashMap<String, String>();
	    	DenyJoin.put("MinecraftJoinDeny", "–í–∞—Å –Ω–µ—Ç –≤ –≤–∞–π—Ç–ª–∏—Å—Ç–µ");
	    	DenyJoin.put("MinecraftJoinDenyBan", "–í—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã");
	    	DenyJoin.put("MinecraftQuit", "%player% –≤—ã—à–µ–ª —Å —Å–µ—Ä–≤–µ—Ä–∞");
	    	LocaleData.get().addDefault("DenyJoin", DenyJoin);
	    	
	    	//–ß–∞—Ç
	    	HashMap<String, String> Chat = new HashMap<String, String>();
	    	Chat.put("MinecraftChatMute", "–í—ã—à —á–∞—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω");
	    	Chat.put("MinecraftAntiSpam", "–û—Ç–¥–æ—Ö–Ω–∏");
	    	Chat.put("MinecraftLocalChat", "[–õ–æ–∫–∞–ª]%player%: %message%");
	    	Chat.put("MinecraftGlobalChat", "[–ì–ª–æ–±–∞–ª]%player%: %message%");
	    	Chat.put("MinecraftToDiscordChat", "[Minecraft]%player%: %message%");
	    	LocaleData.get().addDefault("Chat", Chat);
	    	
	    	//–ë–æ—Ç
	    	HashMap<String, String> Bot = new HashMap<String, String>();
	    	Bot.put("BotStopCommand", "–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
	    	Bot.put("BotStartCommand", "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω");
	    	Bot.put("BotWrongWordAdd", "–°–ª–æ–≤–æ %word% –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–ø–∏—Å–æ–∫");
	    	Bot.put("BotWrongWordRemove", "–°–ª–æ–≤–æ %word% –±—ã–ª–æ —É–±—Ä–∞–Ω–æ –∏–∑ —Å–ø–∏—Å–∫–∞");
	    	LocaleData.get().addDefault("Bot", Bot);
	    	
	    	//–û—Ç–∫–∞–∑ –≤ –ø—Ä–∞–≤–µ
	    	LocaleData.get().addDefault("PermissionDeny", "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤");
	    	
	    	//–ë–∞–Ω –∫–æ–º–∞–Ω–¥–∞
	    	HashMap<String, String> Ban = new HashMap<String, String>();
	    	Ban.put("AdminCommandBanUserIsBanned", "%user% —É–∂–µ –≤ –±–∞–Ω–µ");
	    	Ban.put("AdminCommandBanUserDoesNotInWhiteList", "%user% –Ω–µ—Ç –≤ –≤–∞–π—Ç—Å–ª–∏—Å—Ç–µ");
	    	Ban.put("AdminCommandBanTimeLenghtFail", "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–æ –≤—Ä–µ–º—è –±–∞–Ω–∞!");
	    	Ban.put("AdminCommandBanUser", "%User% –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –Ω–∞ %lenght% %time%");
	    	Ban.put("AdminCommandBanUserDiscordMessage", "–ú–Ω–µ –∂–∞–ª—å, –Ω–æ –≤—ã –∑–∞–±–∞–Ω–µ–Ω—ã –ø–æ –ø—Ä–∏—á–∏–Ω–µ %reason%! –í–∞–º –Ω—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å %lenght% %time% –ø–µ—Ä–µ–¥ –∏–≥—Ä–æ–π");
	    	LocaleData.get().addDefault("Ban", Ban);
	    	
	    	//–ö–æ–º–∞–Ω–¥–∞ –ø–∞—Ä–¥–æ–Ω
	    	HashMap<String, String> pardon = new HashMap<String, String>();
	    	pardon.put("AdminCommandPardonUserIsNoBanned", "%banUser% –Ω–µ –∑–∞–±–∞–Ω–µ–Ω");
	    	pardon.put("AdminCommandPardonUserPardon", "%banUser% –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω");
	    	pardon.put("AdminCommandPardonUserPardonDiscord", "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤–∞—Å —Ä–∞–∑–±–∞–Ω–∏–ª–∏! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!");
	    	LocaleData.get().addDefault("Pardon", pardon);
	    	
	    	//–ú—É—Ç
	    	HashMap<String, String> Mute = new HashMap<String, String>();
	    	Mute.put("AdminCommandMuteUserIsMuted", "%muteUser% —É–∂–µ –∑–∞–º—É—á–µ–Ω");
	    	Mute.put("AdminCommandMuteLenghtFail", "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–æ –≤—Ä–µ–º—è –º—É—Ç–∞");
	    	Mute.put("AdminCommandMuteUser", "%muteUser% –±—ã–ª –∑–∞–º—É—á–µ–Ω –Ω–∞ %lenght% %time%");
	    	LocaleData.get().addDefault("Mute", Mute);
	    	
	    	//–†–∞–∑–º—É—Ç
	    	HashMap<String, String> UnMute = new HashMap<String, String>();
	    	UnMute.put("AdminCommandUserIsNotMuted", "%user% –Ω–µ –≤ –º—É—Ç–µ");
	    	UnMute.put("AdminCommandUserUnMuteMessage", "–í—ã –±—ã–ª–∏ —Ä–∞–∑–º—É—á–µ–Ω—ã");
	    	LocaleData.get().addDefault("unMute", UnMute);
	    	
	    	//–ê–≤—Ç–æ–°–Ω—è—Ç–∏–µ–ù–∞–∫–∞–∑–∞–Ω–∏—è
	    	HashMap<String, String> AutoPardon = new HashMap<String, String>();
	    	AutoPardon.put("DiscordAutoPardonMessage", "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤–∞—Å —Ä–∞–∑–±–∞–Ω–∏–ª–∏! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!");
	    	AutoPardon.put("MinecraftUnMuteMessage", "–í—ã –±—ã–ª–∏ —Ä–∞–∑–º—É—á–µ–Ω—ã!");
	    	LocaleData.get().addDefault("AutoPardon", AutoPardon);
	    	
	    	//–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏
	    	HashMap<String, String> Inventoryes = new HashMap<String, String>();
	    	Inventoryes.put("OpenEnderChest", "–í—ã –æ—Ç–∫—Ä—ã–ª–∏ —ç–Ω–¥–µ—Ä —Å—É–Ω–¥—É–∫ –∏–≥—Ä–æ–∫–∞ %user%");
	    	Inventoryes.put("OpenInventory", "–í—ã –æ—Ç–∫—Ä—ã–ª–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏–≥—Ä–æ–∫–∞ %user%");
	    	Inventoryes.put("OpenEnderChestFail", "–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –≠–Ω–¥–µ—Ä –°—É–Ω–¥—É–∫–∞ —É –∏–≥—Ä–æ–∫–∞ %user%");
	    	Inventoryes.put("OpenEnderChestFail", "–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –ò–Ω–≤–µ–Ω—Ç–∞—Ä—è —É –∏–≥—Ä–æ–∫–∞ %user%");
	    	LocaleData.get().addDefault("Inventory", Inventoryes);
	    	
	    	LocaleData.get().options().copyDefaults(true);
	    	LocaleData.save();
		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
}